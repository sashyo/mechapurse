name: Build and deploy Node.js app to Azure Web App - mechapurse

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev jq

      - name: Clone required modules
        run: |
          git clone https://github.com/tide-foundation/tide-js.git
          cd tide-js && git checkout origin/staging && cd ..

          git clone https://github.com/tide-foundation/tidecloak-js.git
          cd tidecloak-js && git checkout origin/staging && cd ..

          git clone https://github.com/tide-foundation/heimdall.git
          cd heimdall && git checkout origin/staging && cd ..

      - name: Patch tidecloak-js exports for deep import
        run: |
          jq '.exports["./lib/heimdall"] = "./lib/heimdall.js"' tidecloak-js/package.json > temp.json && mv temp.json tidecloak-js/package.json

      - name: Link tidecloak-js globally and locally
        run: |
          cd tidecloak-js
          npm link
          cd ..
          npm link tidecloak-js

      - name: Prepare tide-modules
        run: |
          mkdir -p tide-modules/modules
          cp heimdall/src/heimdall.js tide-modules/modules/

      - name: Write .env.local
        run: |
          echo "TIDECLOAK_LOCAL_URL=https://staging.dauth.me" > .env.local
          echo "CODESPACE_URL=http://localhost:3000" >> .env.local

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'mechapurse'
          slot-name: 'Production'
          package: .
